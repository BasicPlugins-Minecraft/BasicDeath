package me.mobmaker.basicdeath;

import me.mobmaker.basicdeath.data.Conversions;
import me.mobmaker.basicdeath.data.Messages;
import net.kyori.adventure.text.Component;
import org.bukkit.Color;
import org.bukkit.Particle;
import org.bukkit.World;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageByEntityEvent;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.event.entity.PlayerDeathEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerMoveEvent;
import org.bukkit.persistence.PersistentDataContainer;
import org.bukkit.persistence.PersistentDataType;
import org.bukkit.scheduler.BukkitTask;

import java.util.ArrayList;

public class InvulnerabilityEvents implements Listener {

    private final double invulnTime = 120000;
    private ArrayList<Player> players = new ArrayList<>();

    @EventHandler
    public void onPlayerDeath(PlayerDeathEvent e) {
        players.add(e.getEntity());
    }

    @EventHandler
    public void onPlayerMove(PlayerMoveEvent e) {
        Player p = e.getPlayer();
        if (!players.contains(p)) return;
        players.remove(p);
        double timestamp = System.currentTimeMillis();
        PersistentDataContainer pdc = p.getPersistentDataContainer();
        pdc.set(BasicDeath.deathKey, PersistentDataType.DOUBLE, timestamp);
        Component num = Component.text(Conversions.msToTime(invulnTime,"minute"));
        BukkitTask task = new ExpireRunnable(p).runTaskLater(BasicDeath.plugin, (long) invulnTime/50);
        p.setInvulnerable(true);
        p.sendMessage(Messages.INVULNERABILITY_STARTED.get(num));
    }

    @EventHandler
    public void onPlayerDoDamage(EntityDamageByEntityEvent e) {
        if (e.getDamager().getType() == EntityType.PLAYER) {
            Player p = (Player) e.getDamager();
            World w = e.getEntity().getWorld();
            if (p.getPersistentDataContainer().has(BasicDeath.deathKey, PersistentDataType.DOUBLE)) {
                p.getPersistentDataContainer().remove(BasicDeath.deathKey);
                p.setInvulnerable(false);
                w.spawnParticle(Particle.REDSTONE, p.getLocation().add(0,2,0), 5, new Particle.DustOptions(Color.fromRGB(200, 50, 10), 5.0F));
                p.sendMessage(Messages.INVULNERABILITY_CANCELLED.get());
            }
        }
    }

    @EventHandler
    public void onPlayerDamaged(EntityDamageEvent e) {
        if (e.getEntity().getType() == EntityType.PLAYER) {
            Player p = (Player) e.getEntity();
            if (p.getPersistentDataContainer().has(BasicDeath.deathKey, PersistentDataType.DOUBLE)) {
                e.setDamage(0);
                e.setCancelled(true);
            }
        }
    }

    @EventHandler
    public void onPlayerJoin(PlayerJoinEvent e) {
        Player p = e.getPlayer();
        if (p.getPersistentDataContainer().has(BasicDeath.deathKey, PersistentDataType.DOUBLE)) {
            BukkitTask now = new ExpireRunnable(p).runTask(BasicDeath.plugin);
        }
    }


}
